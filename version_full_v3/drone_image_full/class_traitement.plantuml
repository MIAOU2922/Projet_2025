@startuml traitement_class

class traitement {
    ' Fenêtres
    -FenetreTraitement droneFenetre
    -FenetreTraitement fenetreTraitement
    ' Threads
    -thread_reception_image reception
    -thread_reception_string commande
    -thread_detection_contours detection_contours
    -thread_detection_formes detection_formes
    -thread_traitement_telemtrie telemetrie_traitement
    ' Attributs image
    -Mat dermiereImageValide
    -Mat imageRecu
    -Mat imageEnvoyer
    -int traitements
    -LocalDateTime Client_Time
    -int Client_traitement
    +traitement()
    -void mainLoop()
    -void sendImageUDP(byte[] imageData, String address, int port)
    -void sendTextUDP(String data, String address, int port)
    -byte[] encodeImageToJPEG(Mat image, int quality)
}

class FenetreTraitement {
    -JFrame frame
    -JPanel panel
    -JPanel panelOptions
    -JButton buttonForme
    -JButton buttonContours
    -JButton buttonFormeContours
    -JButton buttonRien
    -BufferedImage image
    -int traitement
    -LocalDateTime lastModifiedTime
    
    +FenetreTraitement(String titre, ImageIcon icon, int x, int y)
    +void setImage(BufferedImage newImage)
    -void setTraitement(int traitement)
    +int getTraitement()
    +LocalDateTime getLastModifiedTime()
    +void run()
}

class thread_reception_image {
    -DatagramSocket socket
    -Mat imageRecu
    -Mat blackImage
    -String name
    
    +thread_reception_image(String name, DatagramSocket socket, Mat imageRecu)
    +void run()
    +Mat getImageRecu()
}

class thread_reception_string {
    -DatagramSocket socket
    -String messageRecu
    -String name
    
    +thread_reception_string(String name, DatagramSocket socket)
    +void run()
    +String getMessageRecu()
}

class thread_traitement_telemtrie {
    -cFileMappingDroneCharTelemetryServeur serveur_filemap_telemetrie
    -String address_local_str
    -String text
    -byte[] data
    -DatagramSocket socketTelemetrie
    -thread_reception_string telemetrie
    -String telemetryRecu
    -String name
    -String[] parts
    
    +thread_traitement_telemtrie(String name, DatagramSocket socket)
    +void run()
    -void mainLoop()
}

class thread_detection_contours {
    -Mat frame
    -Mat frame_process
    -boolean running
    -Scalar lowerBound
    -Scalar upperBound
    -List<MatOfPoint> contours
    
    +thread_detection_contours()
    +void run()
    +void stopThread()
    +void setFrame(Mat frame)
    +Mat getFrame_process()
    -void processFrame()
    -void findContours()
    -void drawContours()
}

class thread_detection_formes {
    -Mat frame
    -Mat frame_process
    -boolean running
    -double[] circles
    -MatOfPoint2f approxCurve
    
    +thread_detection_formes()
    +void run()
    +void stopThread()
    +void setFrame(Mat frame)
    +Mat getFrame_process()
    -void detectShapes()
    -void drawShapes()
}

class thread_envoie_cmd {
    -DatagramSocket socket
    -String commandeAEnvoyer
    -String address
    -int port
    -boolean running
    
    +thread_envoie_cmd(String name, DatagramSocket socket)
    +void run()
    +void stopThread()
    +void setCommande(String cmd)
}

class thread_list_dynamic_ip {
    -List<String> client_address
    -List<String> client_time
    -String name
    -LocalDateTime clientTime
    -LocalDateTime now
    
    +thread_list_dynamic_ip(String name)
    +void run()
    +void addClient(String address, String time)
    +void removeClient(String address)
    +void updateClient(String address)
    +List<String> getClientAddress()
}

' Relations
traitement --> FenetreTraitement : "2" uses
traitement --> thread_reception_image : uses
traitement --> thread_reception_string : uses
traitement --> thread_traitement_telemtrie : uses
traitement --> thread_detection_contours : uses
traitement --> thread_detection_formes : uses
traitement --> thread_envoie_cmd : uses
traitement --> thread_list_dynamic_ip : uses
thread_traitement_telemtrie --> thread_reception_string : uses

note right of FenetreTraitement
    Gère l'interface graphique avec:
    - Affichage vidéo
    - Options de traitement
    - 2 instances : drone et traitement
end note

note right of thread_reception_string
    Gère la réception des:
    - Commandes
    - Données télémétriques
end note

note right of thread_reception_image
    Gère la réception des:
    - Images du drone
    - Affiche image noire si erreur
end note

note right of thread_traitement_telemtrie
    Gère la télémétrie:
    - Réception données
    - Mise à jour FileMapping
    - 16 valeurs télémétriques
end note

note right of thread_detection_contours
    Détection des contours:
    - Seuillage HSV
    - Recherche contours
    - Dessin des contours
end note

note right of thread_detection_formes
    Détection des formes:
    - Cercles (Hough)
    - Polygones
    - Classification
end note

note right of thread_envoie_cmd
    Envoi des commandes:
    - Vers le drone
    - Format spécifique
    - UDP
end note

note right of thread_list_dynamic_ip
    Gestion des clients:
    - Liste des IPs
    - Timeouts
    - Mises à jour
end note

@enduml