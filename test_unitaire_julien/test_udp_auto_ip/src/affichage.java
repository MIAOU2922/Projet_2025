import java.net.*;
import java.util.*;
import java.io.*;

public class affichage {
    public static void main(String[] args) throws Exception {

    String[] ascii = {
        ":::::::....::---::::::....::::::::::-----:...:.....:::::----------::::.:.:::::::",
        ":::::::::::::::::::::.:::::------------------:::::::...::---------:::::..:..::::",
        "...::::::::::::::::::::-----::------==++++***++=-:---::::---+**==++-==+++--:::::",
        ".............:::::::::::::---:---=+*####**##**+=--------+***++=++=+=*++=:....:::",
        "..............::::::::....::---:---=+*#########***=::::::-=-==----:=-:=-:-.....:",
        "............::::::::::....:::-:::--=+++++++++++*##+:::::--------::.-+=*+=+=. ..:",
        "........:::::.:::::.:::::::----:-+*=====-=-----=*#+:::------------:=+:-:::: ...:",
        ".:::::::::::..:::::..:::::::::---++-=++====-----+*+------::-----------::........",
        ".:::::::::....::::::::::......::--==+++++-=+==--+*-:-----::-----::-----::::.....",
        ":::...::::.   .::::::..........:-:-==++++--=+===+-..:.:---------::::-------:....",
        "::.......:.  ...:::..    ......:=:-====+=-------=-..:.:::-------::::----::--:::.",
        ":........::...::::::.    .......--:===++===----==-:.::::::------:.:---:::::-----",
        "::.....::...::::::::.    .......:.:==+++==-=----:::::::::-------::---:::::::----",
        "::::..::... .:::::::.  .........:.:===++======:::.::::::::--------::---::::::---",
        ":..::::.. .  .::::::::.........::--==++==-===-::::::::::::-------::::--::::---::",
        ".....::.... .:::::..:::......:-----++++++====-=-:::::::----------:::.::---::--::",
        "......::... .:::::...::::::::------+++======--**=:::::----:------:::..:::..::---",
        ":.....::.....:::::.:::::::----:::===+++=====:-####*++=---:::-----:::.:-:...:::--",
        "::....::.....:::::::::...:-===-::=====+++=-::+###%%%###***++=----:::.:-:....:---",
        ":::....::....-:--::::::-=+*##+-:-=+++=+=-:::=####%%%%%%%%%%%###*=::::--:...:----",
        "::::..:::::::------==+*##%%#%*---=+++--::::+#####%%%%%%%%%%%%%###=:::--.:.:---:-",
        "::-::::::::-------+####%%%%%%#+*=++++===--+####%%%%%%%%%%%%%%%##%+:----:::---:::",
        "------:.....::----*#%##%%%%%%%%%+++++=++++*%%%%%%%%%%%%%%%%%%%%%##=::--------::.",
        "------:.....::::--*%%%#%%%%%%%%#++++++++++##%%%%%%%%%%%%%%#%%%%%%%#-:::--------:",
        "------:.....:-:---*%%%%%%%%%%%%#*+==+++++#%%%%%%%%%%%%%%%%#%%%%%%%#-:::---------",
        "--:----:.:..:-----*%%%%%%%%%%%%#*+--++++*#%%%%%%%%%%%%%%%%%%%%%%%%%*-::------:::",
        "--::----:...:----=#%%%%%%%%%%%%#*+--++++#%%%%%%%%%%%%%%%%%%%%%%%%%%%+:::-----:..",
        "-::::---:...::---=#%%%%%%%%%%%%#*+=-++++#%%%%%#%%%%%%%%%%%%%%%%%%%%%#*+=-:::-:..",
        ":::.:--:::..::---=##%%%%%%%%%%%%*+++****%%%%%#++=+++**#%%%%%%%%%%%%%%%%#*-:.:-:.",
        "::::--::-:..:----=#%%%%%%%%%%%%%#*++***#%%%%%%+++======#%%%%%%%%%%%%%%%%%%*+-:::",
        "::----:.:-:.:-----#%%%%%%%%%%%%%#*++***%%%%%%%#*++======*%%%%%%%%%%%%%%%%%%%#---",
        ":------:::-:------#%%%%%%%%%%%%%#******%%%%%%%%#+++++====#%%%%%%%%%%%%%%%%%%#---",
        "---::.:::::::-----#%%%%%%%%%%%%%#*++**#%%%%%%%%%#*+++====*################%%#---",
        "--:.....::::::---=###%%%%%%%%%%##*++**#%%%%%%%%%%%%%%#+==+#%#################+--",
        ":::::...:::------+#*#####*******#*****#%%%%%%%%%%%%%@@%%%%%%%#**############%*--",
        "---::::::::------=*#%#+====+++*%%*****%%%%%%%%%%%@%@@@@@@@%%%%###%%%%%%%%%%%*===",
        "--::::::::--------*%#**++******#%#***#%%%%%%%%%%%%@@@@@@@@@@@%##%%%%%%%###*=--==",
        "=--::::-----------+#*#%#+******%%#**##%%%%%@%%%%%%%%%@@@@@@@@%+-=======---:---==",
        "==--::---------====+###%#*****#%%#**#%@@@@@@@@@%%%%@@@@@@@@@*-----===-----======",
        "===---==-----====--==+*%%####%%%%##*#%@@@@@@@@@@@@@@@@@@%%%%%%#=========---=====",
        "=======----======---===+*###%%%%@%##%%@@@@@@@@@@@%%%%%%%%%%%%%%=================",
        "--===----:-======-----=====*%%%%%###%@@@@@@@@@@@%%%%%%%%%%%%%%%+================",
        "-====------======-----=+==+#%%%#****#%@@@@@@@@@@%%%%%%%%%%%%%%%#================",
        "=======---=======---===+=+*%%%%#****#%%%@@@@@@@@@%%%%%%%%%%%%%%%+==============="
    };

    // Définition des ports UDP
    int port[] = {
        55000,
        55001,
        55002,
        55003,
        55004,
        55005,
        55006,
        55007,
        55008,
        55009
        };
    
    // Définition des adresses IP
    String address[] = new String[10];
    String address_broadcast = "172.29.255.255";
    
    // Obtenir l'adresse IP locale
    InetAddress address_local = InetAddress.getLocalHost();
    address[0] = address_local.getHostAddress();

    // Définition de la taille des paquets
    byte[] data = new byte[65536];
    // Initialisation des sockets UDP
    DatagramSocket[] sockets = new DatagramSocket[port.length];
     // Initialisation des paquets
    DatagramPacket[] packets = new DatagramPacket[port.length];

    // Création des sockets et des paquets
    for (int i = 0; i < port.length; i++) {
        try {
            sockets[i] = new DatagramSocket(port[i]);
            packets[i] = new DatagramPacket(data, data.length);

            // Lancement d'un thread pour chaque socket
            int finalI = i; // Nécessaire pour accéder à l'index dans le thread
            new Thread(() -> {
                SocketListener(sockets[finalI], packets[finalI]);
            }).start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    // Initialisation des paquets d'informations
    String infoText[] = new String[10];

        while (true) {
            // Envoi des informations sur les ports UDP
            for (int i = 0; i < ascii.length; i++) {
                try {
                    for (int f = 1; f < 10; f++) {
                        sendSringUDP(ascii[i], address_broadcast, port[f]);
                    }
                    //System.out.println(ascii[i]);

                } catch (IOException e) {
                    System.out.println("Erreur lors de la reception du message");
                }
            }
        }
    }
    private static void sendSringUDP(String DataToSend, String address, int port) throws IOException {
        byte[] data = DataToSend.getBytes();
        DatagramSocket socket = new DatagramSocket();
        InetAddress ipAddress = InetAddress.getByName(address);
        DatagramPacket packet = new DatagramPacket(data, data.length, ipAddress, port);
        socket.send(packet);
        socket.close();
    }
    // Méthode pour écouter un socket
    private static void SocketListener(DatagramSocket socket, DatagramPacket packet) {
        try {
            System.out.println("Écoute sur le socket : " + socket.getLocalPort());
            while (true) {
                socket.receive(packet);
                //System.out.println("Données reçues sur le port " + socket.getLocalPort() + ": " + new String(packet.getData(), 0, packet.getLength()));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
