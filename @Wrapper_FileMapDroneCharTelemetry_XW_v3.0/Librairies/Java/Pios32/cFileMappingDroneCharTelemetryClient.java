/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class cFileMappingDroneCharTelemetryClient {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected cFileMappingDroneCharTelemetryClient(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(cFileMappingDroneCharTelemetryClient obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(cFileMappingDroneCharTelemetryClient obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JNIFileMappingDroneCharTelemetryClientJNI.delete_cFileMappingDroneCharTelemetryClient(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public cFileMappingDroneCharTelemetryClient(boolean _DebugFlag) {
    this(JNIFileMappingDroneCharTelemetryClientJNI.new_cFileMappingDroneCharTelemetryClient(_DebugFlag), true);
  }

  public boolean OpenClient(String NameSharedMem) {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_OpenClient(swigCPtr, this, NameSharedMem);
  }

  public void CloseClient() {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_CloseClient(swigCPtr, this);
  }

  public cVirtualDroneCharTelemetry ReadMapFileToVirtualDroneCharTelemetryStruct(cVirtualDroneCharTelemetry Data) {
    long cPtr = JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_ReadMapFileToVirtualDroneCharTelemetryStruct(swigCPtr, this, cVirtualDroneCharTelemetry.getCPtr(Data), Data);
    return (cPtr == 0) ? null : new cVirtualDroneCharTelemetry(cPtr, false);
  }

  public boolean WriteVirtualDroneCharTelemetryStructToMapFile(cVirtualDroneCharTelemetry Data) {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_WriteVirtualDroneCharTelemetryStructToMapFile(swigCPtr, this, cVirtualDroneCharTelemetry.getCPtr(Data), Data);
  }

  public void PrintDebug(String msg, boolean _Return) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_PrintDebug(swigCPtr, this, msg, _Return);
  }

  public void PrintStruct(cVirtualDroneCharTelemetry Data) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_PrintStruct(swigCPtr, this, cVirtualDroneCharTelemetry.getCPtr(Data), Data);
  }

  public cVirtualDroneCharTelemetry getVirtualDroneCharTelemetryPtr() {
    long cPtr = JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryPtr(swigCPtr, this);
    return (cPtr == 0) ? null : new cVirtualDroneCharTelemetry(cPtr, false);
  }

  public boolean getDebugMode() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getDebugMode(swigCPtr, this);
  }

  public int getVirtualDroneCharTelemetryBatteryValue() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryBatteryValue(swigCPtr, this);
  }

  public String getVirtualDroneCharTelemetryDriveTime() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryDriveTime(swigCPtr, this);
  }

  public String getVirtualDroneCharTelemetryTempC() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryTempC(swigCPtr, this);
  }

  public String getVirtualDroneCharTelemetryTempF() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryTempF(swigCPtr, this);
  }

  public String getVirtualDroneCharTelemetryAltitude() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryAltitude(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryAx() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryAx(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryAy() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryAy(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryAz() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryAz(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryFrontDistance() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryFrontDistance(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryBackDistance() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryBackDistance(swigCPtr, this);
  }

  public double getVirtualDroneCharTelemetryPressure() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryPressure(swigCPtr, this);
  }

  public boolean getVirtualDroneCharTelemetryMutexBlocAccess() {
    return JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_getVirtualDroneCharTelemetryMutexBlocAccess(swigCPtr, this);
  }

  public void setVirtualDroneCharTelemetryPtr(cVirtualDroneCharTelemetry VPStruct) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryPtr(swigCPtr, this, cVirtualDroneCharTelemetry.getCPtr(VPStruct), VPStruct);
  }

  public void setDebugMode(boolean _DebugMode) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setDebugMode(swigCPtr, this, _DebugMode);
  }

  public void setVirtualDroneCharTelemetryBatteryValue(int value) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryBatteryValue(swigCPtr, this, value);
  }

  public void setVirtualDroneCharTelemetryDriveTime(String DriveTime) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryDriveTime(swigCPtr, this, DriveTime);
  }

  public void setVirtualDroneCharTelemetryTempC(String TempC) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryTempC(swigCPtr, this, TempC);
  }

  public void setVirtualDroneCharTelemetryTempF(String TempF) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryTempF(swigCPtr, this, TempF);
  }

  public void setVirtualDroneCharTelemetryAltitude(String Altitude) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryAltitude(swigCPtr, this, Altitude);
  }

  public void setVirtualDroneCharTelemetryAx(double Ax) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryAx(swigCPtr, this, Ax);
  }

  public void setVirtualDroneCharTelemetryAy(double Ay) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryAy(swigCPtr, this, Ay);
  }

  public void setVirtualDroneCharTelemetryAz(double Az) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryAz(swigCPtr, this, Az);
  }

  public void setVirtualDroneCharTelemetryFrontDistance(double FrontDistance) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryFrontDistance(swigCPtr, this, FrontDistance);
  }

  public void setVirtualDroneCharTelemetryBackDistance(double BackDistance) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryBackDistance(swigCPtr, this, BackDistance);
  }

  public void setVirtualDroneCharTelemetryPressure(double Pressure) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryPressure(swigCPtr, this, Pressure);
  }

  public void setVirtualDroneCharTelemetryMutexBlocAccess(boolean blocaccess) {
    JNIFileMappingDroneCharTelemetryClientJNI.cFileMappingDroneCharTelemetryClient_setVirtualDroneCharTelemetryMutexBlocAccess(swigCPtr, this, blocaccess);
  }

}
