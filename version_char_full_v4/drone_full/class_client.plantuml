@startuml client_class

class client {
    ' Attributs image
    -Mat imageRecu
    -BufferedImage bufferedImage
    -FenetreTraitement fenetreClient
    
    ' Threads
    -thread_reception_image reception
    -thread_reception_string commande
    
    ' Attributs réseau
    -String addressLocalStr
    -String text
    -int[] port
    -String addressBroadcast
    
    ' Attributs traitement
    -int currentTraitement
    -int previousTraitement
    
    ' Méthodes
    +client()
    -void mainLoop()
    -byte[] encodeImageToJPEG(Mat image, int quality)
    -void sendTextUDP(String data, String address, int port)
}

class FenetreTraitement {
    -JFrame frame
    -JPanel panel
    -JPanel panelOptions
    -JButton buttonForme
    -JButton buttonContours
    -JButton buttonFormeContours
    -JButton buttonRien
    -BufferedImage image
    -int traitement
    -LocalDateTime lastModifiedTime
    
    +FenetreTraitement(String titre, ImageIcon icon, int x, int y)
    +void setImage(BufferedImage newImage)
    -void setTraitement(int traitement)
    +int getTraitement()
    +LocalDateTime getLastModifiedTime()
    +void run()
}

class thread_reception_image {
    -Mat imageRecu
    -DatagramSocket socket
    -byte[] buffer
    -boolean running
    -String name
    
    +thread_reception_image(String name, int port)
    +void run()
    +void stopThread()
    +Mat getImageRecu()
    -void processImage(byte[] data)
}

class thread_reception_string {
    -DatagramSocket socket
    -String messageRecu
    -String name
    -byte[] buffer
    -boolean running
    
    +thread_reception_string(String name, DatagramSocket socket)
    +void run()
    +void stopThread()
    +String getMessageRecu()
}

class tempo {
    -int duree
    
    +tempo(int duree)
    +void wait(int duree)
}

' Relations
client --> FenetreTraitement : uses
client --> thread_reception_image : uses
client --> thread_reception_string : uses
client --> tempo : uses

note right of client
    Classe principale qui gère:
    - Interface utilisateur
    - Communication réseau
    - Traitement d'image
end note

note right of FenetreTraitement
    Interface graphique avec:
    - Affichage vidéo
    - Boutons de contrôle
    - Options de traitement
end note

note right of thread_reception_image
    Thread dédié à:
    - Réception UDP des images
    - Décodage JPEG
    - Conversion en Mat
end note

note right of thread_reception_string
    Thread dédié à:
    - Réception des messages
    - Commandes et statuts
end note

note right of tempo
    Classe utilitaire pour:
    - Gestion des délais
    - Synchronisation
end note

@enduml